{"id":"node_modules/graphology-layout-force/helpers.js","dependencies":[{"name":"/home/ven/graphTest/package.json","includedInParent":true,"mtime":1664281725891},{"name":"/home/ven/graphTest/node_modules/graphology-layout-force/package.json","includedInParent":true,"mtime":1664281452970}],"generated":{"js":"/**\n * Graphology Force Layout Helpers\n * ================================\n *\n * Miscellaneous helper functions related to the force layout.\n */\nexports.assignLayoutChanges = function (graph, nodeStates, params) {\n  const {nodeXAttribute: x, nodeYAttribute: y} = params;\n\n  graph.updateEachNodeAttributes(\n    (n, attr) => {\n      const state = nodeStates[n];\n\n      if (!state || state.fixed) return attr;\n\n      attr[x] = state.x;\n      attr[y] = state.y;\n\n      return attr;\n    },\n    {attributes: ['x', 'y']}\n  );\n};\n\nexports.collectLayoutChanges = function (nodeStates) {\n  const mapping = {};\n\n  for (const n in nodeStates) {\n    const state = nodeStates[n];\n\n    mapping[n] = {x: state.x, y: state.y};\n  }\n\n  return mapping;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphology-layout-force/helpers.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"node_modules/graphology-layout-force/helpers.js":"/**\n * Graphology Force Layout Helpers\n * ================================\n *\n * Miscellaneous helper functions related to the force layout.\n */\nexports.assignLayoutChanges = function (graph, nodeStates, params) {\n  const {nodeXAttribute: x, nodeYAttribute: y} = params;\n\n  graph.updateEachNodeAttributes(\n    (n, attr) => {\n      const state = nodeStates[n];\n\n      if (!state || state.fixed) return attr;\n\n      attr[x] = state.x;\n      attr[y] = state.y;\n\n      return attr;\n    },\n    {attributes: ['x', 'y']}\n  );\n};\n\nexports.collectLayoutChanges = function (nodeStates) {\n  const mapping = {};\n\n  for (const n in nodeStates) {\n    const state = nodeStates[n];\n\n    mapping[n] = {x: state.x, y: state.y};\n  }\n\n  return mapping;\n};\n"},"lineCount":36}},"error":null,"hash":"9b4938f65ff7f2e1e73efbde070e7252","cacheData":{"env":{}}}