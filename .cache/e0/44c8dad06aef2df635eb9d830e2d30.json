{"id":"node_modules/sigma/utils/index.js","dependencies":[{"name":"/home/ven/graphTest/package.json","includedInParent":true,"mtime":1664287371192},{"name":"/home/ven/graphTest/node_modules/sigma/package.json","includedInParent":true,"mtime":1664366520512},{"name":"graphology-utils/is-graph","loc":{"line":23,"column":41,"index":1222},"parent":"/home/ven/graphTest/node_modules/sigma/utils/index.js","resolved":"/home/ven/graphTest/node_modules/graphology-utils/is-graph.js"},{"name":"./matrices","loc":{"line":24,"column":25,"index":1278},"parent":"/home/ven/graphTest/node_modules/sigma/utils/index.js","resolved":"/home/ven/graphTest/node_modules/sigma/utils/matrices.js"},{"name":"./data","loc":{"line":25,"column":21,"index":1314},"parent":"/home/ven/graphTest/node_modules/sigma/utils/index.js","resolved":"/home/ven/graphTest/node_modules/sigma/utils/data.js"}],"generated":{"js":"\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.floatArrayColor = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(require(\"graphology-utils/is-graph\"));\nvar matrices_1 = require(\"./matrices\");\nvar data_1 = require(\"./data\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n    return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Helper to use Object.assign with more than two objects.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assign(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        Object.assign(target, o);\n    }\n    return target;\n}\nexports.assign = assign;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        for (var k in o) {\n            if (isPlainObject(o[k])) {\n                target[k] = assignDeep(target[k], o[k]);\n            }\n            else {\n                target[k] = o[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\"\n    ? function (callback) { return requestAnimationFrame(callback); }\n    : function (callback) { return setTimeout(callback, 0); };\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\"\n    ? function (requestID) { return cancelAnimationFrame(requestID); }\n    : function (requestID) { return clearTimeout(requestID); };\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n    var element = document.createElement(tag);\n    if (style) {\n        for (var k in style) {\n            element.style[k] = style[k];\n        }\n    }\n    if (attributes) {\n        for (var k in attributes) {\n            element.setAttribute(k, attributes[k]);\n        }\n    }\n    return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n    if (typeof window.devicePixelRatio !== \"undefined\")\n        return window.devicePixelRatio;\n    return 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * Function returning the graph's node extent in x & y.\n *\n * @param  {Graph}\n * @return {object}\n */\nfunction graphExtent(graph) {\n    if (!graph.order)\n        return { x: [0, 1], y: [0, 1] };\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n    graph.forEachNode(function (_, attr) {\n        var x = attr.x, y = attr.y;\n        if (x < xMin)\n            xMin = x;\n        if (x > xMax)\n            xMax = x;\n        if (y < yMin)\n            yMin = y;\n        if (y > yMax)\n            yMax = y;\n    });\n    return { x: [xMin, xMax], y: [yMin, yMax] };\n}\nexports.graphExtent = graphExtent;\nfunction createNormalizationFunction(extent) {\n    var _a = __read(extent.x, 2), minX = _a[0], maxX = _a[1], _b = __read(extent.y, 2), minY = _b[0], maxY = _b[1];\n    var ratio = Math.max(maxX - minX, maxY - minY), dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;\n    if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio))\n        ratio = 1;\n    if (isNaN(dX))\n        dX = 0;\n    if (isNaN(dY))\n        dY = 0;\n    var fn = function (data) {\n        return {\n            x: 0.5 + (data.x - dX) / ratio,\n            y: 0.5 + (data.y - dY) / ratio,\n        };\n    };\n    // TODO: possibility to apply this in batch over array of indices\n    fn.applyTo = function (data) {\n        data.x = 0.5 + (data.x - dX) / ratio;\n        data.y = 0.5 + (data.y - dY) / ratio;\n    };\n    fn.inverse = function (data) {\n        return {\n            x: dX + ratio * (data.x - 0.5),\n            y: dY + ratio * (data.y - 0.5),\n        };\n    };\n    fn.ratio = ratio;\n    return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(extent, getter, elements) {\n    // If k is > n, we'll use a standard sort\n    return elements.sort(function (a, b) {\n        var zA = getter(a) || 0, zB = getter(b) || 0;\n        if (zA < zB)\n            return -1;\n        if (zA > zB)\n            return 1;\n        return 0;\n    });\n    // TODO: counting sort optimization\n}\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n    var r = 0; // byte\n    var g = 0; // byte\n    var b = 0; // byte\n    var a = 1; // float\n    // Handling hexadecimal notation\n    if (val[0] === \"#\") {\n        if (val.length === 4) {\n            r = parseInt(val.charAt(1) + val.charAt(1), 16);\n            g = parseInt(val.charAt(2) + val.charAt(2), 16);\n            b = parseInt(val.charAt(3) + val.charAt(3), 16);\n        }\n        else {\n            r = parseInt(val.charAt(1) + val.charAt(2), 16);\n            g = parseInt(val.charAt(3) + val.charAt(4), 16);\n            b = parseInt(val.charAt(5) + val.charAt(6), 16);\n        }\n        // TODO: parse hex with alpha?\n    }\n    // Handling rgb notation\n    else if (RGBA_TEST_REGEX.test(val)) {\n        var match = val.match(RGBA_EXTRACT_REGEX);\n        if (match) {\n            r = +match[1];\n            g = +match[2];\n            b = +match[3];\n            if (match[4])\n                a = +match[4];\n        }\n    }\n    return { r: r, g: g, b: b, a: a };\n}\nexports.parseColor = parseColor;\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in data_1.HTML_COLORS) {\n    FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);\n    // Replicating cache for hex values for free\n    FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction floatArrayColor(val) {\n    val = data_1.HTML_COLORS[val] || val;\n    // NOTE: this variant is not cached because it is mostly used for uniforms\n    var _a = parseColor(val), r = _a.r, g = _a.g, b = _a.b, a = _a.a;\n    return new Float32Array([r / 255, g / 255, b / 255, a]);\n}\nexports.floatArrayColor = floatArrayColor;\nfunction floatColor(val) {\n    // If the color is already computed, we yield it\n    if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\")\n        return FLOAT_COLOR_CACHE[val];\n    var parsed = parseColor(val);\n    var r = parsed.r, g = parsed.g, b = parsed.b;\n    var a = parsed.a;\n    a = (a * 255) | 0;\n    INT32[0] = ((a << 24) | (b << 16) | (g << 8) | r) & 0xfeffffff;\n    var color = FLOAT32[0];\n    FLOAT_COLOR_CACHE[val] = color;\n    return color;\n}\nexports.floatColor = floatColor;\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps dealing with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, ie. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n    var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n    var graphRatio = graphDimensions.height / graphDimensions.width;\n    // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n    // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n    if ((viewportRatio < 1 && graphRatio > 1) || (viewportRatio > 1 && graphRatio < 1)) {\n        return 1;\n    }\n    // Else, we need to fit the graph inside the stage:\n    // 1. If the graph is \"squarer\" (ie. with a ratio closer to 1), we need to make the largest sides touch;\n    // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n    return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\nexports.getCorrectionRatio = getCorrectionRatio;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n    var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;\n    var width = viewportDimensions.width, height = viewportDimensions.height;\n    var matrix = (0, matrices_1.identity)();\n    var smallestDimension = Math.min(width, height) - 2 * padding;\n    var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n    if (!inverse) {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));\n    }\n    else {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n    }\n    return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (ie. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because of the fact that in WebGL,\n * the image is vertically swapped.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n    var _a = (0, matrices_1.multiplyVec2)(matrix, { x: Math.cos(cameraState.angle), y: Math.sin(cameraState.angle) }, 0), x = _a.x, y = _a.y;\n    return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\nexports.getMatrixImpact = getMatrixImpact;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n    var data = array || new Uint8Array(4);\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Function used to know whether given webgl context can use 32 bits indices.\n */\nfunction canUse32BitsIndices(gl) {\n    var webgl2 = typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext;\n    return webgl2 || !!gl.getExtension(\"OES_element_index_uint\");\n}\nexports.canUse32BitsIndices = canUse32BitsIndices;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n    // check if it's a valid graphology instance\n    if (!(0, is_graph_1.default)(graph))\n        throw new Error(\"Sigma: invalid graph instance.\");\n    // check if nodes have x/y attributes\n    graph.forEachNode(function (key, attributes) {\n        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n            throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n        }\n    });\n}\nexports.validateGraph = validateGraph;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sigma/utils/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/sigma/utils/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}}],"sources":{"node_modules/sigma/utils/index.js":"\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.floatArrayColor = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(require(\"graphology-utils/is-graph\"));\nvar matrices_1 = require(\"./matrices\");\nvar data_1 = require(\"./data\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n    return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Helper to use Object.assign with more than two objects.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assign(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        Object.assign(target, o);\n    }\n    return target;\n}\nexports.assign = assign;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        for (var k in o) {\n            if (isPlainObject(o[k])) {\n                target[k] = assignDeep(target[k], o[k]);\n            }\n            else {\n                target[k] = o[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\"\n    ? function (callback) { return requestAnimationFrame(callback); }\n    : function (callback) { return setTimeout(callback, 0); };\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\"\n    ? function (requestID) { return cancelAnimationFrame(requestID); }\n    : function (requestID) { return clearTimeout(requestID); };\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n    var element = document.createElement(tag);\n    if (style) {\n        for (var k in style) {\n            element.style[k] = style[k];\n        }\n    }\n    if (attributes) {\n        for (var k in attributes) {\n            element.setAttribute(k, attributes[k]);\n        }\n    }\n    return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n    if (typeof window.devicePixelRatio !== \"undefined\")\n        return window.devicePixelRatio;\n    return 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * Function returning the graph's node extent in x & y.\n *\n * @param  {Graph}\n * @return {object}\n */\nfunction graphExtent(graph) {\n    if (!graph.order)\n        return { x: [0, 1], y: [0, 1] };\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n    graph.forEachNode(function (_, attr) {\n        var x = attr.x, y = attr.y;\n        if (x < xMin)\n            xMin = x;\n        if (x > xMax)\n            xMax = x;\n        if (y < yMin)\n            yMin = y;\n        if (y > yMax)\n            yMax = y;\n    });\n    return { x: [xMin, xMax], y: [yMin, yMax] };\n}\nexports.graphExtent = graphExtent;\nfunction createNormalizationFunction(extent) {\n    var _a = __read(extent.x, 2), minX = _a[0], maxX = _a[1], _b = __read(extent.y, 2), minY = _b[0], maxY = _b[1];\n    var ratio = Math.max(maxX - minX, maxY - minY), dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;\n    if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio))\n        ratio = 1;\n    if (isNaN(dX))\n        dX = 0;\n    if (isNaN(dY))\n        dY = 0;\n    var fn = function (data) {\n        return {\n            x: 0.5 + (data.x - dX) / ratio,\n            y: 0.5 + (data.y - dY) / ratio,\n        };\n    };\n    // TODO: possibility to apply this in batch over array of indices\n    fn.applyTo = function (data) {\n        data.x = 0.5 + (data.x - dX) / ratio;\n        data.y = 0.5 + (data.y - dY) / ratio;\n    };\n    fn.inverse = function (data) {\n        return {\n            x: dX + ratio * (data.x - 0.5),\n            y: dY + ratio * (data.y - 0.5),\n        };\n    };\n    fn.ratio = ratio;\n    return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(extent, getter, elements) {\n    // If k is > n, we'll use a standard sort\n    return elements.sort(function (a, b) {\n        var zA = getter(a) || 0, zB = getter(b) || 0;\n        if (zA < zB)\n            return -1;\n        if (zA > zB)\n            return 1;\n        return 0;\n    });\n    // TODO: counting sort optimization\n}\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n    var r = 0; // byte\n    var g = 0; // byte\n    var b = 0; // byte\n    var a = 1; // float\n    // Handling hexadecimal notation\n    if (val[0] === \"#\") {\n        if (val.length === 4) {\n            r = parseInt(val.charAt(1) + val.charAt(1), 16);\n            g = parseInt(val.charAt(2) + val.charAt(2), 16);\n            b = parseInt(val.charAt(3) + val.charAt(3), 16);\n        }\n        else {\n            r = parseInt(val.charAt(1) + val.charAt(2), 16);\n            g = parseInt(val.charAt(3) + val.charAt(4), 16);\n            b = parseInt(val.charAt(5) + val.charAt(6), 16);\n        }\n        // TODO: parse hex with alpha?\n    }\n    // Handling rgb notation\n    else if (RGBA_TEST_REGEX.test(val)) {\n        var match = val.match(RGBA_EXTRACT_REGEX);\n        if (match) {\n            r = +match[1];\n            g = +match[2];\n            b = +match[3];\n            if (match[4])\n                a = +match[4];\n        }\n    }\n    return { r: r, g: g, b: b, a: a };\n}\nexports.parseColor = parseColor;\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in data_1.HTML_COLORS) {\n    FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);\n    // Replicating cache for hex values for free\n    FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction floatArrayColor(val) {\n    val = data_1.HTML_COLORS[val] || val;\n    // NOTE: this variant is not cached because it is mostly used for uniforms\n    var _a = parseColor(val), r = _a.r, g = _a.g, b = _a.b, a = _a.a;\n    return new Float32Array([r / 255, g / 255, b / 255, a]);\n}\nexports.floatArrayColor = floatArrayColor;\nfunction floatColor(val) {\n    // If the color is already computed, we yield it\n    if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\")\n        return FLOAT_COLOR_CACHE[val];\n    var parsed = parseColor(val);\n    var r = parsed.r, g = parsed.g, b = parsed.b;\n    var a = parsed.a;\n    a = (a * 255) | 0;\n    INT32[0] = ((a << 24) | (b << 16) | (g << 8) | r) & 0xfeffffff;\n    var color = FLOAT32[0];\n    FLOAT_COLOR_CACHE[val] = color;\n    return color;\n}\nexports.floatColor = floatColor;\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps dealing with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, ie. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n    var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n    var graphRatio = graphDimensions.height / graphDimensions.width;\n    // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n    // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n    if ((viewportRatio < 1 && graphRatio > 1) || (viewportRatio > 1 && graphRatio < 1)) {\n        return 1;\n    }\n    // Else, we need to fit the graph inside the stage:\n    // 1. If the graph is \"squarer\" (ie. with a ratio closer to 1), we need to make the largest sides touch;\n    // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n    return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\nexports.getCorrectionRatio = getCorrectionRatio;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n    var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;\n    var width = viewportDimensions.width, height = viewportDimensions.height;\n    var matrix = (0, matrices_1.identity)();\n    var smallestDimension = Math.min(width, height) - 2 * padding;\n    var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n    if (!inverse) {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));\n    }\n    else {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n    }\n    return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (ie. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because of the fact that in WebGL,\n * the image is vertically swapped.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n    var _a = (0, matrices_1.multiplyVec2)(matrix, { x: Math.cos(cameraState.angle), y: Math.sin(cameraState.angle) }, 0), x = _a.x, y = _a.y;\n    return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\nexports.getMatrixImpact = getMatrixImpact;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n    var data = array || new Uint8Array(4);\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Function used to know whether given webgl context can use 32 bits indices.\n */\nfunction canUse32BitsIndices(gl) {\n    var webgl2 = typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext;\n    return webgl2 || !!gl.getExtension(\"OES_element_index_uint\");\n}\nexports.canUse32BitsIndices = canUse32BitsIndices;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n    // check if it's a valid graphology instance\n    if (!(0, is_graph_1.default)(graph))\n        throw new Error(\"Sigma: invalid graph instance.\");\n    // check if nodes have x/y attributes\n    graph.forEachNode(function (key, attributes) {\n        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n            throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n        }\n    });\n}\nexports.validateGraph = validateGraph;\n"},"lineCount":384}},"error":null,"hash":"f23a3d062056b39cf45ba3c538fe2de5","cacheData":{"env":{}}}