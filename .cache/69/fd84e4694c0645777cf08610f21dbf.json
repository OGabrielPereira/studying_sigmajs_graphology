{"id":"node_modules/sigma/rendering/webgl/programs/common/program.js","dependencies":[{"name":"/home/ven/graphTest/package.json","includedInParent":true,"mtime":1664287371192},{"name":"/home/ven/graphTest/node_modules/sigma/package.json","includedInParent":true,"mtime":1664366520512},{"name":"../../shaders/utils","loc":{"line":11,"column":22,"index":303},"parent":"/home/ven/graphTest/node_modules/sigma/rendering/webgl/programs/common/program.js","resolved":"/home/ven/graphTest/node_modules/sigma/rendering/webgl/shaders/utils.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractProgram = void 0;\n/**\n * Sigma.js WebGL Renderer Program\n * ================================\n *\n * Class representing a single WebGL program used by sigma's WebGL renderer.\n * @module\n */\nvar utils_1 = require(\"../../shaders/utils\");\n/**\n * Abstract Program class.\n *\n * @constructor\n */\nvar AbstractProgram = /** @class */ (function () {\n    function AbstractProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        this.array = new Float32Array();\n        this.points = points;\n        this.attributes = attributes;\n        this.gl = gl;\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n        var buffer = gl.createBuffer();\n        if (buffer === null)\n            throw new Error(\"AbstractProgram: error while creating the buffer\");\n        this.buffer = buffer;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        this.vertexShader = (0, utils_1.loadVertexShader)(gl, this.vertexShaderSource);\n        this.fragmentShader = (0, utils_1.loadFragmentShader)(gl, this.fragmentShaderSource);\n        this.program = (0, utils_1.loadProgram)(gl, [this.vertexShader, this.fragmentShader]);\n    }\n    AbstractProgram.prototype.bufferData = function () {\n        var gl = this.gl;\n        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n    };\n    AbstractProgram.prototype.allocate = function (capacity) {\n        this.array = new Float32Array(this.points * this.attributes * capacity);\n    };\n    AbstractProgram.prototype.hasNothingToRender = function () {\n        return this.array.length === 0;\n    };\n    return AbstractProgram;\n}());\nexports.AbstractProgram = AbstractProgram;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sigma/rendering/webgl/programs/common/program.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"node_modules/sigma/rendering/webgl/programs/common/program.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractProgram = void 0;\n/**\n * Sigma.js WebGL Renderer Program\n * ================================\n *\n * Class representing a single WebGL program used by sigma's WebGL renderer.\n * @module\n */\nvar utils_1 = require(\"../../shaders/utils\");\n/**\n * Abstract Program class.\n *\n * @constructor\n */\nvar AbstractProgram = /** @class */ (function () {\n    function AbstractProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        this.array = new Float32Array();\n        this.points = points;\n        this.attributes = attributes;\n        this.gl = gl;\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n        var buffer = gl.createBuffer();\n        if (buffer === null)\n            throw new Error(\"AbstractProgram: error while creating the buffer\");\n        this.buffer = buffer;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        this.vertexShader = (0, utils_1.loadVertexShader)(gl, this.vertexShaderSource);\n        this.fragmentShader = (0, utils_1.loadFragmentShader)(gl, this.fragmentShaderSource);\n        this.program = (0, utils_1.loadProgram)(gl, [this.vertexShader, this.fragmentShader]);\n    }\n    AbstractProgram.prototype.bufferData = function () {\n        var gl = this.gl;\n        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n    };\n    AbstractProgram.prototype.allocate = function (capacity) {\n        this.array = new Float32Array(this.points * this.attributes * capacity);\n    };\n    AbstractProgram.prototype.hasNothingToRender = function () {\n        return this.array.length === 0;\n    };\n    return AbstractProgram;\n}());\nexports.AbstractProgram = AbstractProgram;\n"},"lineCount":47}},"error":null,"hash":"6f07e49d0b44b131f6fc2df8da937f56","cacheData":{"env":{}}}