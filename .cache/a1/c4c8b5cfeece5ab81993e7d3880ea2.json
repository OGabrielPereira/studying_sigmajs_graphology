{"id":"node_modules/sigma/rendering/canvas/edge-label.js","dependencies":[{"name":"/home/ven/graphTest/package.json","includedInParent":true,"mtime":1664287371192},{"name":"/home/ven/graphTest/node_modules/sigma/package.json","includedInParent":true,"mtime":1664279401161}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {\n    var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, color = settings.edgeLabelColor.attribute\n        ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || \"#000\"\n        : settings.edgeLabelColor.color;\n    var label = edgeData.label;\n    if (!label)\n        return;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Computing positions without considering nodes sizes:\n    var sSize = sourceData.size;\n    var tSize = targetData.size;\n    var sx = sourceData.x;\n    var sy = sourceData.y;\n    var tx = targetData.x;\n    var ty = targetData.y;\n    var cx = (sx + tx) / 2;\n    var cy = (sy + ty) / 2;\n    var dx = tx - sx;\n    var dy = ty - sy;\n    var d = Math.sqrt(dx * dx + dy * dy);\n    if (d < sSize + tSize)\n        return;\n    // Adding nodes sizes:\n    sx += (dx * sSize) / d;\n    sy += (dy * sSize) / d;\n    tx -= (dx * tSize) / d;\n    ty -= (dy * tSize) / d;\n    cx = (sx + tx) / 2;\n    cy = (sy + ty) / 2;\n    dx = tx - sx;\n    dy = ty - sy;\n    d = Math.sqrt(dx * dx + dy * dy);\n    // Handling ellipsis\n    var textLength = context.measureText(label).width;\n    if (textLength > d) {\n        var ellipsis = \"â€¦\";\n        label = label + ellipsis;\n        textLength = context.measureText(label).width;\n        while (textLength > d && label.length > 1) {\n            label = label.slice(0, -2) + ellipsis;\n            textLength = context.measureText(label).width;\n        }\n        if (label.length < 4)\n            return;\n    }\n    var angle;\n    if (dx > 0) {\n        if (dy > 0)\n            angle = Math.acos(dx / d);\n        else\n            angle = Math.asin(dy / d);\n    }\n    else {\n        if (dy > 0)\n            angle = Math.acos(dx / d) + Math.PI;\n        else\n            angle = Math.asin(dx / d) + Math.PI / 2;\n    }\n    context.save();\n    context.translate(cx, cy);\n    context.rotate(angle);\n    context.fillText(label, -textLength / 2, edgeData.size / 2 + size);\n    context.restore();\n}\nexports.default = drawEdgeLabel;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sigma/rendering/canvas/edge-label.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}}],"sources":{"node_modules/sigma/rendering/canvas/edge-label.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {\n    var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, color = settings.edgeLabelColor.attribute\n        ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || \"#000\"\n        : settings.edgeLabelColor.color;\n    var label = edgeData.label;\n    if (!label)\n        return;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Computing positions without considering nodes sizes:\n    var sSize = sourceData.size;\n    var tSize = targetData.size;\n    var sx = sourceData.x;\n    var sy = sourceData.y;\n    var tx = targetData.x;\n    var ty = targetData.y;\n    var cx = (sx + tx) / 2;\n    var cy = (sy + ty) / 2;\n    var dx = tx - sx;\n    var dy = ty - sy;\n    var d = Math.sqrt(dx * dx + dy * dy);\n    if (d < sSize + tSize)\n        return;\n    // Adding nodes sizes:\n    sx += (dx * sSize) / d;\n    sy += (dy * sSize) / d;\n    tx -= (dx * tSize) / d;\n    ty -= (dy * tSize) / d;\n    cx = (sx + tx) / 2;\n    cy = (sy + ty) / 2;\n    dx = tx - sx;\n    dy = ty - sy;\n    d = Math.sqrt(dx * dx + dy * dy);\n    // Handling ellipsis\n    var textLength = context.measureText(label).width;\n    if (textLength > d) {\n        var ellipsis = \"â€¦\";\n        label = label + ellipsis;\n        textLength = context.measureText(label).width;\n        while (textLength > d && label.length > 1) {\n            label = label.slice(0, -2) + ellipsis;\n            textLength = context.measureText(label).width;\n        }\n        if (label.length < 4)\n            return;\n    }\n    var angle;\n    if (dx > 0) {\n        if (dy > 0)\n            angle = Math.acos(dx / d);\n        else\n            angle = Math.asin(dy / d);\n    }\n    else {\n        if (dy > 0)\n            angle = Math.acos(dx / d) + Math.PI;\n        else\n            angle = Math.asin(dx / d) + Math.PI / 2;\n    }\n    context.save();\n    context.translate(cx, cy);\n    context.rotate(angle);\n    context.fillText(label, -textLength / 2, edgeData.size / 2 + size);\n    context.restore();\n}\nexports.default = drawEdgeLabel;\n"},"lineCount":69}},"error":null,"hash":"6e2f8987c0246852c1966cc79fbe80c4","cacheData":{"env":{}}}