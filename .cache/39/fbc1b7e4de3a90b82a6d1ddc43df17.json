{"id":"node_modules/sigma/rendering/canvas/label.js","dependencies":[{"name":"/home/ven/graphTest/package.json","includedInParent":true,"mtime":1664287371192},{"name":"/home/ven/graphTest/node_modules/sigma/package.json","includedInParent":true,"mtime":1664366520512}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawLabel(context, data, settings) {\n    if (!data.label)\n        return;\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight, color = settings.labelColor.attribute\n        ? data[settings.labelColor.attribute] || settings.labelColor.color || \"#000\"\n        : settings.labelColor.color;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\nexports.default = drawLabel;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sigma/rendering/canvas/label.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}}],"sources":{"node_modules/sigma/rendering/canvas/label.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawLabel(context, data, settings) {\n    if (!data.label)\n        return;\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight, color = settings.labelColor.attribute\n        ? data[settings.labelColor.attribute] || settings.labelColor.color || \"#000\"\n        : settings.labelColor.color;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\nexports.default = drawLabel;\n"},"lineCount":14}},"error":null,"hash":"84fd6259f6e0f86af9b07cee546e7c5f","cacheData":{"env":{}}}