{"id":"node_modules/graphology-layout-force/iterate.js","dependencies":[{"name":"/home/ven/graphTest/package.json","includedInParent":true,"mtime":1664281725891},{"name":"/home/ven/graphTest/node_modules/graphology-layout-force/package.json","includedInParent":true,"mtime":1664281452970},{"name":"graphology-utils/getters","loc":{"line":10,"column":12,"index":218},"parent":"/home/ven/graphTest/node_modules/graphology-layout-force/iterate.js","resolved":"/home/ven/graphTest/node_modules/graphology-utils/getters.js"}],"generated":{"js":"/**\n * Graphology Force Layout Iteration\n * ==================================\n *\n * Function describing a single iteration of the force layout.\n */\nconst {\n  createNodeValueGetter,\n  createEdgeValueGetter\n} = require('graphology-utils/getters');\n\n// const EPSILON = -Infinity;\n\n// function isVeryCloseToZero(x) {\n//   return Math.abs(x) < EPSILON;\n// }\n\nmodule.exports = function iterate(graph, nodeStates, params) {\n  const {nodeXAttribute: xKey, nodeYAttribute: yKey} = params;\n  const {attraction, repulsion, gravity, inertia, maxMove} = params.settings;\n\n  let {shouldSkipNode, shouldSkipEdge, isNodeFixed} = params;\n\n  isNodeFixed = createNodeValueGetter(isNodeFixed);\n  shouldSkipNode = createNodeValueGetter(shouldSkipNode, false);\n  shouldSkipEdge = createEdgeValueGetter(shouldSkipEdge, false);\n\n  const nodes = graph.filterNodes((n, attr) => {\n    return !shouldSkipNode.fromEntry(n, attr);\n  });\n\n  const adjustedOrder = nodes.length;\n\n  // Check nodeStatess and inertia\n  for (let i = 0; i < adjustedOrder; i++) {\n    const n = nodes[i];\n    const attr = graph.getNodeAttributes(n);\n    const nodeState = nodeStates[n];\n\n    if (!nodeState)\n      nodeStates[n] = {\n        dx: 0,\n        dy: 0,\n        x: attr[xKey] || 0,\n        y: attr[yKey] || 0\n      };\n    else\n      nodeStates[n] = {\n        dx: nodeState.dx * inertia,\n        dy: nodeState.dy * inertia,\n        x: attr[xKey] || 0,\n        y: attr[yKey] || 0\n      };\n  }\n\n  // Repulsion\n  if (repulsion)\n    for (let i = 0; i < adjustedOrder; i++) {\n      const n1 = nodes[i];\n      const n1State = nodeStates[n1];\n\n      for (let j = i + 1; j < adjustedOrder; j++) {\n        const n2 = nodes[j];\n        const n2State = nodeStates[n2];\n\n        // Compute distance:\n        const dx = n2State.x - n1State.x;\n        const dy = n2State.y - n1State.y;\n        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        // Repulse nodes relatively to 1 / distance:\n        const repulsionX = (repulsion / distance) * dx;\n        const repulsionY = (repulsion / distance) * dy;\n        n1State.dx -= repulsionX;\n        n1State.dy -= repulsionY;\n        n2State.dx += repulsionX;\n        n2State.dy += repulsionY;\n      }\n    }\n\n  // Attraction\n  if (attraction)\n    graph.forEachEdge(\n      (edge, attr, source, target, sourceAttr, targetAttr, undirected) => {\n        if (source === target) return;\n\n        if (\n          shouldSkipNode.fromEntry(source, sourceAttr) ||\n          shouldSkipNode.fromEntry(target, targetAttr)\n        )\n          return;\n\n        if (\n          shouldSkipEdge.fromEntry(\n            edge,\n            attr,\n            source,\n            target,\n            sourceAttr,\n            targetAttr,\n            undirected\n          )\n        )\n          return;\n\n        const n1State = nodeStates[source];\n        const n2State = nodeStates[target];\n\n        // Compute distance:\n        const dx = n2State.x - n1State.x;\n        const dy = n2State.y - n1State.y;\n\n        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        // Attract nodes relatively to their distance:\n        const attractionX = attraction * distance * dx;\n        const attractionY = attraction * distance * dy;\n        n1State.dx += attractionX;\n        n1State.dy += attractionY;\n        n2State.dx -= attractionX;\n        n2State.dy -= attractionY;\n      }\n    );\n\n  // Gravity\n  if (gravity)\n    for (let i = 0; i < adjustedOrder; i++) {\n      const n = nodes[i];\n      const nodeState = nodeStates[n];\n\n      // Attract nodes to [0, 0] relatively to the distance:\n      const {x, y} = nodeState;\n      const distance = Math.sqrt(x * x + y * y) || 1;\n      nodeStates[n].dx -= x * gravity * distance;\n      nodeStates[n].dy -= y * gravity * distance;\n    }\n\n  // Apply forces\n  const converged = false;\n\n  for (let i = 0; i < adjustedOrder; i++) {\n    const n = nodes[i];\n    const nodeState = nodeStates[n];\n\n    const distance = Math.sqrt(\n      nodeState.dx * nodeState.dx + nodeState.dy * nodeState.dy\n    );\n\n    if (distance > maxMove) {\n      nodeState.dx *= maxMove / distance;\n      nodeState.dy *= maxMove / distance;\n    }\n\n    // if (!isVeryCloseToZero(nodeState.dx) || !isVeryCloseToZero(nodeState.dy)) {\n    //   converged = false;\n    // }\n\n    if (!isNodeFixed.fromGraph(graph, n)) {\n      nodeState.x += nodeState.dx;\n      nodeState.y += nodeState.dy;\n      nodeState.fixed = false;\n    } else {\n      nodeState.fixed = true;\n    }\n\n    // NOTE: possibility to assign here to save one loop in the future\n  }\n\n  return {converged};\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/graphology-layout-force/iterate.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}}],"sources":{"node_modules/graphology-layout-force/iterate.js":"/**\n * Graphology Force Layout Iteration\n * ==================================\n *\n * Function describing a single iteration of the force layout.\n */\nconst {\n  createNodeValueGetter,\n  createEdgeValueGetter\n} = require('graphology-utils/getters');\n\n// const EPSILON = -Infinity;\n\n// function isVeryCloseToZero(x) {\n//   return Math.abs(x) < EPSILON;\n// }\n\nmodule.exports = function iterate(graph, nodeStates, params) {\n  const {nodeXAttribute: xKey, nodeYAttribute: yKey} = params;\n  const {attraction, repulsion, gravity, inertia, maxMove} = params.settings;\n\n  let {shouldSkipNode, shouldSkipEdge, isNodeFixed} = params;\n\n  isNodeFixed = createNodeValueGetter(isNodeFixed);\n  shouldSkipNode = createNodeValueGetter(shouldSkipNode, false);\n  shouldSkipEdge = createEdgeValueGetter(shouldSkipEdge, false);\n\n  const nodes = graph.filterNodes((n, attr) => {\n    return !shouldSkipNode.fromEntry(n, attr);\n  });\n\n  const adjustedOrder = nodes.length;\n\n  // Check nodeStatess and inertia\n  for (let i = 0; i < adjustedOrder; i++) {\n    const n = nodes[i];\n    const attr = graph.getNodeAttributes(n);\n    const nodeState = nodeStates[n];\n\n    if (!nodeState)\n      nodeStates[n] = {\n        dx: 0,\n        dy: 0,\n        x: attr[xKey] || 0,\n        y: attr[yKey] || 0\n      };\n    else\n      nodeStates[n] = {\n        dx: nodeState.dx * inertia,\n        dy: nodeState.dy * inertia,\n        x: attr[xKey] || 0,\n        y: attr[yKey] || 0\n      };\n  }\n\n  // Repulsion\n  if (repulsion)\n    for (let i = 0; i < adjustedOrder; i++) {\n      const n1 = nodes[i];\n      const n1State = nodeStates[n1];\n\n      for (let j = i + 1; j < adjustedOrder; j++) {\n        const n2 = nodes[j];\n        const n2State = nodeStates[n2];\n\n        // Compute distance:\n        const dx = n2State.x - n1State.x;\n        const dy = n2State.y - n1State.y;\n        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        // Repulse nodes relatively to 1 / distance:\n        const repulsionX = (repulsion / distance) * dx;\n        const repulsionY = (repulsion / distance) * dy;\n        n1State.dx -= repulsionX;\n        n1State.dy -= repulsionY;\n        n2State.dx += repulsionX;\n        n2State.dy += repulsionY;\n      }\n    }\n\n  // Attraction\n  if (attraction)\n    graph.forEachEdge(\n      (edge, attr, source, target, sourceAttr, targetAttr, undirected) => {\n        if (source === target) return;\n\n        if (\n          shouldSkipNode.fromEntry(source, sourceAttr) ||\n          shouldSkipNode.fromEntry(target, targetAttr)\n        )\n          return;\n\n        if (\n          shouldSkipEdge.fromEntry(\n            edge,\n            attr,\n            source,\n            target,\n            sourceAttr,\n            targetAttr,\n            undirected\n          )\n        )\n          return;\n\n        const n1State = nodeStates[source];\n        const n2State = nodeStates[target];\n\n        // Compute distance:\n        const dx = n2State.x - n1State.x;\n        const dy = n2State.y - n1State.y;\n\n        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        // Attract nodes relatively to their distance:\n        const attractionX = attraction * distance * dx;\n        const attractionY = attraction * distance * dy;\n        n1State.dx += attractionX;\n        n1State.dy += attractionY;\n        n2State.dx -= attractionX;\n        n2State.dy -= attractionY;\n      }\n    );\n\n  // Gravity\n  if (gravity)\n    for (let i = 0; i < adjustedOrder; i++) {\n      const n = nodes[i];\n      const nodeState = nodeStates[n];\n\n      // Attract nodes to [0, 0] relatively to the distance:\n      const {x, y} = nodeState;\n      const distance = Math.sqrt(x * x + y * y) || 1;\n      nodeStates[n].dx -= x * gravity * distance;\n      nodeStates[n].dy -= y * gravity * distance;\n    }\n\n  // Apply forces\n  const converged = false;\n\n  for (let i = 0; i < adjustedOrder; i++) {\n    const n = nodes[i];\n    const nodeState = nodeStates[n];\n\n    const distance = Math.sqrt(\n      nodeState.dx * nodeState.dx + nodeState.dy * nodeState.dy\n    );\n\n    if (distance > maxMove) {\n      nodeState.dx *= maxMove / distance;\n      nodeState.dy *= maxMove / distance;\n    }\n\n    // if (!isVeryCloseToZero(nodeState.dx) || !isVeryCloseToZero(nodeState.dy)) {\n    //   converged = false;\n    // }\n\n    if (!isNodeFixed.fromGraph(graph, n)) {\n      nodeState.x += nodeState.dx;\n      nodeState.y += nodeState.dy;\n      nodeState.fixed = false;\n    } else {\n      nodeState.fixed = true;\n    }\n\n    // NOTE: possibility to assign here to save one loop in the future\n  }\n\n  return {converged};\n};\n"},"lineCount":171}},"error":null,"hash":"425dffe2a2d687f157e2f75d4fb88176","cacheData":{"env":{}}}