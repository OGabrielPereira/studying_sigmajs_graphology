{"id":"node_modules/graphology-layout-forceatlas2/iterate.js","dependencies":[{"name":"/home/ven/graphTest/package.json","includedInParent":true,"mtime":1664287371192},{"name":"/home/ven/graphTest/node_modules/graphology-layout-forceatlas2/package.json","includedInParent":true,"mtime":1664281919757}],"generated":{"js":"/* eslint no-constant-condition: 0 */\n/**\n * Graphology ForceAtlas2 Iteration\n * =================================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0;\nvar NODE_Y = 1;\nvar NODE_DX = 2;\nvar NODE_DY = 3;\nvar NODE_OLD_DX = 4;\nvar NODE_OLD_DY = 5;\nvar NODE_MASS = 6;\nvar NODE_CONVERGENCE = 7;\nvar NODE_SIZE = 8;\nvar NODE_FIXED = 9;\n\nvar EDGE_SOURCE = 0;\nvar EDGE_TARGET = 1;\nvar EDGE_WEIGHT = 2;\n\nvar REGION_NODE = 0;\nvar REGION_CENTER_X = 1;\nvar REGION_CENTER_Y = 2;\nvar REGION_SIZE = 3;\nvar REGION_NEXT_SIBLING = 4;\nvar REGION_FIRST_CHILD = 5;\nvar REGION_MASS = 6;\nvar REGION_MASS_CENTER_X = 7;\nvar REGION_MASS_CENTER_Y = 8;\n\nvar SUBDIVISION_ATTEMPTS = 3;\n\n/**\n * Constants.\n */\nvar PPN = 10;\nvar PPE = 3;\nvar PPR = 9;\n\nvar MAX_FORCE = 10;\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @param  {Float32Array} EdgeMatrix - Edge data.\n * @return {object}                  - Some metadata.\n */\nmodule.exports = function iterate(options, NodeMatrix, EdgeMatrix) {\n  // Initializing variables\n  var l, r, n, n1, n2, rn, e, w, g, s;\n\n  var order = NodeMatrix.length,\n    size = EdgeMatrix.length;\n\n  var adjustSizes = options.adjustSizes;\n\n  var thetaSquared = options.barnesHutTheta * options.barnesHutTheta;\n\n  var outboundAttCompensation, coefficient, xDist, yDist, ewc, distance, factor;\n\n  var RegionMatrix = [];\n\n  // 1) Initializing layout data\n  //-----------------------------\n\n  // Resetting positions & computing max values\n  for (n = 0; n < order; n += PPN) {\n    NodeMatrix[n + NODE_OLD_DX] = NodeMatrix[n + NODE_DX];\n    NodeMatrix[n + NODE_OLD_DY] = NodeMatrix[n + NODE_DY];\n    NodeMatrix[n + NODE_DX] = 0;\n    NodeMatrix[n + NODE_DY] = 0;\n  }\n\n  // If outbound attraction distribution, compensate\n  if (options.outboundAttractionDistribution) {\n    outboundAttCompensation = 0;\n    for (n = 0; n < order; n += PPN) {\n      outboundAttCompensation += NodeMatrix[n + NODE_MASS];\n    }\n\n    outboundAttCompensation /= order / PPN;\n  }\n\n  // 1.bis) Barnes-Hut computation\n  //------------------------------\n\n  if (options.barnesHutOptimize) {\n    // Setting up\n    var minX = Infinity,\n      maxX = -Infinity,\n      minY = Infinity,\n      maxY = -Infinity,\n      q,\n      q2,\n      subdivisionAttempts;\n\n    // Computing min and max values\n    for (n = 0; n < order; n += PPN) {\n      minX = Math.min(minX, NodeMatrix[n + NODE_X]);\n      maxX = Math.max(maxX, NodeMatrix[n + NODE_X]);\n      minY = Math.min(minY, NodeMatrix[n + NODE_Y]);\n      maxY = Math.max(maxY, NodeMatrix[n + NODE_Y]);\n    }\n\n    // squarify bounds, it's a quadtree\n    var dx = maxX - minX,\n      dy = maxY - minY;\n    if (dx > dy) {\n      minY -= (dx - dy) / 2;\n      maxY = minY + dx;\n    } else {\n      minX -= (dy - dx) / 2;\n      maxX = minX + dy;\n    }\n\n    // Build the Barnes Hut root region\n    RegionMatrix[0 + REGION_NODE] = -1;\n    RegionMatrix[0 + REGION_CENTER_X] = (minX + maxX) / 2;\n    RegionMatrix[0 + REGION_CENTER_Y] = (minY + maxY) / 2;\n    RegionMatrix[0 + REGION_SIZE] = Math.max(maxX - minX, maxY - minY);\n    RegionMatrix[0 + REGION_NEXT_SIBLING] = -1;\n    RegionMatrix[0 + REGION_FIRST_CHILD] = -1;\n    RegionMatrix[0 + REGION_MASS] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_X] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_Y] = 0;\n\n    // Add each node in the tree\n    l = 1;\n    for (n = 0; n < order; n += PPN) {\n      // Current region, starting with root\n      r = 0;\n      subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n\n      while (true) {\n        // Are there sub-regions?\n\n        // We look at first child index\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // There are sub-regions\n\n          // We just iterate to find a \"leaf\" of the tree\n          // that is an empty region or a region with a single node\n          // (see next case)\n\n          // Find the quadrant of n\n          if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD];\n            } else {\n              // Bottom Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n            }\n          } else {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n            } else {\n              // Bottom Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n            }\n          }\n\n          // Update center of mass and mass (we only do it for non-leave regions)\n          RegionMatrix[r + REGION_MASS_CENTER_X] =\n            (RegionMatrix[r + REGION_MASS_CENTER_X] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_X] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS_CENTER_Y] =\n            (RegionMatrix[r + REGION_MASS_CENTER_Y] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_Y] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS] += NodeMatrix[n + NODE_MASS];\n\n          // Iterate on the right quadrant\n          r = q;\n          continue;\n        } else {\n          // There are no sub-regions: we are in a \"leaf\"\n\n          // Is there a node in this leave?\n          if (RegionMatrix[r + REGION_NODE] < 0) {\n            // There is no node in region:\n            // we record node n and go on\n            RegionMatrix[r + REGION_NODE] = n;\n            break;\n          } else {\n            // There is a node in this region\n\n            // We will need to create sub-regions, stick the two\n            // nodes (the old one r[0] and the new one n) in two\n            // subregions. If they fall in the same quadrant,\n            // we will iterate.\n\n            // Create sub-regions\n            RegionMatrix[r + REGION_FIRST_CHILD] = l * PPR;\n            w = RegionMatrix[r + REGION_SIZE] / 2; // new size (half)\n\n            // NOTE: we use screen coordinates\n            // from Top Left to Bottom Right\n\n            // Top Left sub-region\n            g = RegionMatrix[r + REGION_FIRST_CHILD];\n\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Left sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Top Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] =\n              RegionMatrix[r + REGION_NEXT_SIBLING];\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            l += 4;\n\n            // Now the goal is to find two different sub-regions\n            // for the two nodes: the one previously recorded (r[0])\n            // and the one we want to add (n)\n\n            // Find the quadrant of the old node\n            if (\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X] <\n              RegionMatrix[r + REGION_CENTER_X]\n            ) {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            // We remove r[0] from the region r, add its mass to r and record it in q\n            RegionMatrix[r + REGION_MASS] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_MASS];\n            RegionMatrix[r + REGION_MASS_CENTER_X] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X];\n            RegionMatrix[r + REGION_MASS_CENTER_Y] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y];\n\n            RegionMatrix[q + REGION_NODE] = RegionMatrix[r + REGION_NODE];\n            RegionMatrix[r + REGION_NODE] = -1;\n\n            // Find the quadrant of n\n            if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            if (q === q2) {\n              // If both nodes are in the same quadrant,\n              // we have to try it again on this quadrant\n              if (subdivisionAttempts--) {\n                r = q;\n                continue; // while\n              } else {\n                // we are out of precision here, and we cannot subdivide anymore\n                // but we have to break the loop anyway\n                subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n                break; // while\n              }\n            }\n\n            // If both quadrants are different, we record n\n            // in its quadrant\n            RegionMatrix[q2 + REGION_NODE] = n;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // 2) Repulsion\n  //--------------\n  // NOTES: adjustSizes = antiCollision & scalingRatio = coefficient\n\n  if (options.barnesHutOptimize) {\n    coefficient = options.scalingRatio;\n\n    // Applying repulsion through regions\n    for (n = 0; n < order; n += PPN) {\n      // Computing leaf quad nodes iteration\n\n      r = 0; // Starting with root region\n      while (true) {\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // The region has sub-regions\n\n          // We run the Barnes Hut test to see if we are at the right distance\n          distance =\n            Math.pow(\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X],\n              2\n            ) +\n            Math.pow(\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y],\n              2\n            );\n\n          s = RegionMatrix[r + REGION_SIZE];\n\n          if ((4 * s * s) / distance < thetaSquared) {\n            // We treat the region as a single body, and we repulse\n\n            xDist =\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X];\n            yDist =\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y];\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n\n            // When this is done, we iterate. We have to look at the next sibling.\n            r = RegionMatrix[r + REGION_NEXT_SIBLING];\n            if (r < 0) break; // No next sibling: we have finished the tree\n\n            continue;\n          } else {\n            // The region is too close and we have to look at sub-regions\n            r = RegionMatrix[r + REGION_FIRST_CHILD];\n            continue;\n          }\n        } else {\n          // The region has no sub-region\n          // If there is a node r[0] and it is not n, then repulse\n          rn = RegionMatrix[r + REGION_NODE];\n\n          if (rn >= 0 && rn !== n) {\n            xDist = NodeMatrix[n + NODE_X] - NodeMatrix[rn + NODE_X];\n            yDist = NodeMatrix[n + NODE_Y] - NodeMatrix[rn + NODE_Y];\n\n            distance = xDist * xDist + yDist * yDist;\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n          }\n\n          // When this is done, we iterate. We have to look at the next sibling.\n          r = RegionMatrix[r + REGION_NEXT_SIBLING];\n\n          if (r < 0) break; // No next sibling: we have finished the tree\n\n          continue;\n        }\n      }\n    }\n  } else {\n    coefficient = options.scalingRatio;\n\n    // Square iteration\n    for (n1 = 0; n1 < order; n1 += PPN) {\n      for (n2 = 0; n2 < n1; n2 += PPN) {\n        // Common to both methods\n        xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n        yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n        if (adjustSizes === true) {\n          //-- Anticollision Linear Repulsion\n          distance =\n            Math.sqrt(xDist * xDist + yDist * yDist) -\n            NodeMatrix[n1 + NODE_SIZE] -\n            NodeMatrix[n2 + NODE_SIZE];\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] += xDist * factor;\n            NodeMatrix[n2 + NODE_DY] += yDist * factor;\n          } else if (distance < 0) {\n            factor =\n              100 *\n              coefficient *\n              NodeMatrix[n1 + NODE_MASS] *\n              NodeMatrix[n2 + NODE_MASS];\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        } else {\n          //-- Linear Repulsion\n          distance = Math.sqrt(xDist * xDist + yDist * yDist);\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        }\n      }\n    }\n  }\n\n  // 3) Gravity\n  //------------\n  g = options.gravity / options.scalingRatio;\n  coefficient = options.scalingRatio;\n  for (n = 0; n < order; n += PPN) {\n    factor = 0;\n\n    // Common to both methods\n    xDist = NodeMatrix[n + NODE_X];\n    yDist = NodeMatrix[n + NODE_Y];\n    distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n    if (options.strongGravityMode) {\n      //-- Strong gravity\n      if (distance > 0) factor = coefficient * NodeMatrix[n + NODE_MASS] * g;\n    } else {\n      //-- Linear Anti-collision Repulsion n\n      if (distance > 0)\n        factor = (coefficient * NodeMatrix[n + NODE_MASS] * g) / distance;\n    }\n\n    // Updating node's dx and dy\n    NodeMatrix[n + NODE_DX] -= xDist * factor;\n    NodeMatrix[n + NODE_DY] -= yDist * factor;\n  }\n\n  // 4) Attraction\n  //---------------\n  coefficient =\n    1 * (options.outboundAttractionDistribution ? outboundAttCompensation : 1);\n\n  // TODO: simplify distance\n  // TODO: coefficient is always used as -c --> optimize?\n  for (e = 0; e < size; e += PPE) {\n    n1 = EdgeMatrix[e + EDGE_SOURCE];\n    n2 = EdgeMatrix[e + EDGE_TARGET];\n    w = EdgeMatrix[e + EDGE_WEIGHT];\n\n    // Edge weight influence\n    ewc = Math.pow(w, options.edgeWeightInfluence);\n\n    // Common measures\n    xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n    yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n    // Applying attraction to nodes\n    if (adjustSizes === true) {\n      distance =\n        Math.sqrt(xDist * xDist + yDist * yDist) -\n        NodeMatrix[n1 + NODE_SIZE] -\n        NodeMatrix[n2 + NODE_SIZE];\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n          }\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- Linear Anti-collision Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc;\n          }\n        }\n      }\n    } else {\n      distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Attraction\n          if (distance > 0)\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Attraction Mass Distributed\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n        } else {\n          //-- Linear Attraction\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = -coefficient * ewc;\n        }\n      }\n    }\n\n    // Updating nodes' dx and dy\n    // TODO: if condition or factor = 1?\n    if (distance > 0) {\n      // Updating nodes' dx and dy\n      NodeMatrix[n1 + NODE_DX] += xDist * factor;\n      NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n      NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n      NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n    }\n  }\n\n  // 5) Apply Forces\n  //-----------------\n  var force, swinging, traction, nodespeed, newX, newY;\n\n  // MATH: sqrt and square distances\n  if (adjustSizes === true) {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        force = Math.sqrt(\n          Math.pow(NodeMatrix[n + NODE_DX], 2) +\n            Math.pow(NodeMatrix[n + NODE_DY], 2)\n        );\n\n        if (force > MAX_FORCE) {\n          NodeMatrix[n + NODE_DX] =\n            (NodeMatrix[n + NODE_DX] * MAX_FORCE) / force;\n          NodeMatrix[n + NODE_DY] =\n            (NodeMatrix[n + NODE_DY] * MAX_FORCE) / force;\n        }\n\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed = (0.1 * Math.log(1 + traction)) / (1 + Math.sqrt(swinging));\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  } else {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed =\n          (NodeMatrix[n + NODE_CONVERGENCE] * Math.log(1 + traction)) /\n          (1 + Math.sqrt(swinging));\n\n        // Updating node convergence\n        NodeMatrix[n + NODE_CONVERGENCE] = Math.min(\n          1,\n          Math.sqrt(\n            (nodespeed *\n              (Math.pow(NodeMatrix[n + NODE_DX], 2) +\n                Math.pow(NodeMatrix[n + NODE_DY], 2))) /\n              (1 + Math.sqrt(swinging))\n          )\n        );\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  }\n\n  // We return the information about the layout (no need to return the matrices)\n  return {};\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/graphology-layout-forceatlas2/iterate.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}}],"sources":{"node_modules/graphology-layout-forceatlas2/iterate.js":"/* eslint no-constant-condition: 0 */\n/**\n * Graphology ForceAtlas2 Iteration\n * =================================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0;\nvar NODE_Y = 1;\nvar NODE_DX = 2;\nvar NODE_DY = 3;\nvar NODE_OLD_DX = 4;\nvar NODE_OLD_DY = 5;\nvar NODE_MASS = 6;\nvar NODE_CONVERGENCE = 7;\nvar NODE_SIZE = 8;\nvar NODE_FIXED = 9;\n\nvar EDGE_SOURCE = 0;\nvar EDGE_TARGET = 1;\nvar EDGE_WEIGHT = 2;\n\nvar REGION_NODE = 0;\nvar REGION_CENTER_X = 1;\nvar REGION_CENTER_Y = 2;\nvar REGION_SIZE = 3;\nvar REGION_NEXT_SIBLING = 4;\nvar REGION_FIRST_CHILD = 5;\nvar REGION_MASS = 6;\nvar REGION_MASS_CENTER_X = 7;\nvar REGION_MASS_CENTER_Y = 8;\n\nvar SUBDIVISION_ATTEMPTS = 3;\n\n/**\n * Constants.\n */\nvar PPN = 10;\nvar PPE = 3;\nvar PPR = 9;\n\nvar MAX_FORCE = 10;\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @param  {Float32Array} EdgeMatrix - Edge data.\n * @return {object}                  - Some metadata.\n */\nmodule.exports = function iterate(options, NodeMatrix, EdgeMatrix) {\n  // Initializing variables\n  var l, r, n, n1, n2, rn, e, w, g, s;\n\n  var order = NodeMatrix.length,\n    size = EdgeMatrix.length;\n\n  var adjustSizes = options.adjustSizes;\n\n  var thetaSquared = options.barnesHutTheta * options.barnesHutTheta;\n\n  var outboundAttCompensation, coefficient, xDist, yDist, ewc, distance, factor;\n\n  var RegionMatrix = [];\n\n  // 1) Initializing layout data\n  //-----------------------------\n\n  // Resetting positions & computing max values\n  for (n = 0; n < order; n += PPN) {\n    NodeMatrix[n + NODE_OLD_DX] = NodeMatrix[n + NODE_DX];\n    NodeMatrix[n + NODE_OLD_DY] = NodeMatrix[n + NODE_DY];\n    NodeMatrix[n + NODE_DX] = 0;\n    NodeMatrix[n + NODE_DY] = 0;\n  }\n\n  // If outbound attraction distribution, compensate\n  if (options.outboundAttractionDistribution) {\n    outboundAttCompensation = 0;\n    for (n = 0; n < order; n += PPN) {\n      outboundAttCompensation += NodeMatrix[n + NODE_MASS];\n    }\n\n    outboundAttCompensation /= order / PPN;\n  }\n\n  // 1.bis) Barnes-Hut computation\n  //------------------------------\n\n  if (options.barnesHutOptimize) {\n    // Setting up\n    var minX = Infinity,\n      maxX = -Infinity,\n      minY = Infinity,\n      maxY = -Infinity,\n      q,\n      q2,\n      subdivisionAttempts;\n\n    // Computing min and max values\n    for (n = 0; n < order; n += PPN) {\n      minX = Math.min(minX, NodeMatrix[n + NODE_X]);\n      maxX = Math.max(maxX, NodeMatrix[n + NODE_X]);\n      minY = Math.min(minY, NodeMatrix[n + NODE_Y]);\n      maxY = Math.max(maxY, NodeMatrix[n + NODE_Y]);\n    }\n\n    // squarify bounds, it's a quadtree\n    var dx = maxX - minX,\n      dy = maxY - minY;\n    if (dx > dy) {\n      minY -= (dx - dy) / 2;\n      maxY = minY + dx;\n    } else {\n      minX -= (dy - dx) / 2;\n      maxX = minX + dy;\n    }\n\n    // Build the Barnes Hut root region\n    RegionMatrix[0 + REGION_NODE] = -1;\n    RegionMatrix[0 + REGION_CENTER_X] = (minX + maxX) / 2;\n    RegionMatrix[0 + REGION_CENTER_Y] = (minY + maxY) / 2;\n    RegionMatrix[0 + REGION_SIZE] = Math.max(maxX - minX, maxY - minY);\n    RegionMatrix[0 + REGION_NEXT_SIBLING] = -1;\n    RegionMatrix[0 + REGION_FIRST_CHILD] = -1;\n    RegionMatrix[0 + REGION_MASS] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_X] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_Y] = 0;\n\n    // Add each node in the tree\n    l = 1;\n    for (n = 0; n < order; n += PPN) {\n      // Current region, starting with root\n      r = 0;\n      subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n\n      while (true) {\n        // Are there sub-regions?\n\n        // We look at first child index\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // There are sub-regions\n\n          // We just iterate to find a \"leaf\" of the tree\n          // that is an empty region or a region with a single node\n          // (see next case)\n\n          // Find the quadrant of n\n          if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD];\n            } else {\n              // Bottom Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n            }\n          } else {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n            } else {\n              // Bottom Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n            }\n          }\n\n          // Update center of mass and mass (we only do it for non-leave regions)\n          RegionMatrix[r + REGION_MASS_CENTER_X] =\n            (RegionMatrix[r + REGION_MASS_CENTER_X] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_X] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS_CENTER_Y] =\n            (RegionMatrix[r + REGION_MASS_CENTER_Y] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_Y] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS] += NodeMatrix[n + NODE_MASS];\n\n          // Iterate on the right quadrant\n          r = q;\n          continue;\n        } else {\n          // There are no sub-regions: we are in a \"leaf\"\n\n          // Is there a node in this leave?\n          if (RegionMatrix[r + REGION_NODE] < 0) {\n            // There is no node in region:\n            // we record node n and go on\n            RegionMatrix[r + REGION_NODE] = n;\n            break;\n          } else {\n            // There is a node in this region\n\n            // We will need to create sub-regions, stick the two\n            // nodes (the old one r[0] and the new one n) in two\n            // subregions. If they fall in the same quadrant,\n            // we will iterate.\n\n            // Create sub-regions\n            RegionMatrix[r + REGION_FIRST_CHILD] = l * PPR;\n            w = RegionMatrix[r + REGION_SIZE] / 2; // new size (half)\n\n            // NOTE: we use screen coordinates\n            // from Top Left to Bottom Right\n\n            // Top Left sub-region\n            g = RegionMatrix[r + REGION_FIRST_CHILD];\n\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Left sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Top Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] =\n              RegionMatrix[r + REGION_NEXT_SIBLING];\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            l += 4;\n\n            // Now the goal is to find two different sub-regions\n            // for the two nodes: the one previously recorded (r[0])\n            // and the one we want to add (n)\n\n            // Find the quadrant of the old node\n            if (\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X] <\n              RegionMatrix[r + REGION_CENTER_X]\n            ) {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            // We remove r[0] from the region r, add its mass to r and record it in q\n            RegionMatrix[r + REGION_MASS] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_MASS];\n            RegionMatrix[r + REGION_MASS_CENTER_X] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X];\n            RegionMatrix[r + REGION_MASS_CENTER_Y] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y];\n\n            RegionMatrix[q + REGION_NODE] = RegionMatrix[r + REGION_NODE];\n            RegionMatrix[r + REGION_NODE] = -1;\n\n            // Find the quadrant of n\n            if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            if (q === q2) {\n              // If both nodes are in the same quadrant,\n              // we have to try it again on this quadrant\n              if (subdivisionAttempts--) {\n                r = q;\n                continue; // while\n              } else {\n                // we are out of precision here, and we cannot subdivide anymore\n                // but we have to break the loop anyway\n                subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n                break; // while\n              }\n            }\n\n            // If both quadrants are different, we record n\n            // in its quadrant\n            RegionMatrix[q2 + REGION_NODE] = n;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // 2) Repulsion\n  //--------------\n  // NOTES: adjustSizes = antiCollision & scalingRatio = coefficient\n\n  if (options.barnesHutOptimize) {\n    coefficient = options.scalingRatio;\n\n    // Applying repulsion through regions\n    for (n = 0; n < order; n += PPN) {\n      // Computing leaf quad nodes iteration\n\n      r = 0; // Starting with root region\n      while (true) {\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // The region has sub-regions\n\n          // We run the Barnes Hut test to see if we are at the right distance\n          distance =\n            Math.pow(\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X],\n              2\n            ) +\n            Math.pow(\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y],\n              2\n            );\n\n          s = RegionMatrix[r + REGION_SIZE];\n\n          if ((4 * s * s) / distance < thetaSquared) {\n            // We treat the region as a single body, and we repulse\n\n            xDist =\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X];\n            yDist =\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y];\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n\n            // When this is done, we iterate. We have to look at the next sibling.\n            r = RegionMatrix[r + REGION_NEXT_SIBLING];\n            if (r < 0) break; // No next sibling: we have finished the tree\n\n            continue;\n          } else {\n            // The region is too close and we have to look at sub-regions\n            r = RegionMatrix[r + REGION_FIRST_CHILD];\n            continue;\n          }\n        } else {\n          // The region has no sub-region\n          // If there is a node r[0] and it is not n, then repulse\n          rn = RegionMatrix[r + REGION_NODE];\n\n          if (rn >= 0 && rn !== n) {\n            xDist = NodeMatrix[n + NODE_X] - NodeMatrix[rn + NODE_X];\n            yDist = NodeMatrix[n + NODE_Y] - NodeMatrix[rn + NODE_Y];\n\n            distance = xDist * xDist + yDist * yDist;\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n          }\n\n          // When this is done, we iterate. We have to look at the next sibling.\n          r = RegionMatrix[r + REGION_NEXT_SIBLING];\n\n          if (r < 0) break; // No next sibling: we have finished the tree\n\n          continue;\n        }\n      }\n    }\n  } else {\n    coefficient = options.scalingRatio;\n\n    // Square iteration\n    for (n1 = 0; n1 < order; n1 += PPN) {\n      for (n2 = 0; n2 < n1; n2 += PPN) {\n        // Common to both methods\n        xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n        yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n        if (adjustSizes === true) {\n          //-- Anticollision Linear Repulsion\n          distance =\n            Math.sqrt(xDist * xDist + yDist * yDist) -\n            NodeMatrix[n1 + NODE_SIZE] -\n            NodeMatrix[n2 + NODE_SIZE];\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] += xDist * factor;\n            NodeMatrix[n2 + NODE_DY] += yDist * factor;\n          } else if (distance < 0) {\n            factor =\n              100 *\n              coefficient *\n              NodeMatrix[n1 + NODE_MASS] *\n              NodeMatrix[n2 + NODE_MASS];\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        } else {\n          //-- Linear Repulsion\n          distance = Math.sqrt(xDist * xDist + yDist * yDist);\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        }\n      }\n    }\n  }\n\n  // 3) Gravity\n  //------------\n  g = options.gravity / options.scalingRatio;\n  coefficient = options.scalingRatio;\n  for (n = 0; n < order; n += PPN) {\n    factor = 0;\n\n    // Common to both methods\n    xDist = NodeMatrix[n + NODE_X];\n    yDist = NodeMatrix[n + NODE_Y];\n    distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n    if (options.strongGravityMode) {\n      //-- Strong gravity\n      if (distance > 0) factor = coefficient * NodeMatrix[n + NODE_MASS] * g;\n    } else {\n      //-- Linear Anti-collision Repulsion n\n      if (distance > 0)\n        factor = (coefficient * NodeMatrix[n + NODE_MASS] * g) / distance;\n    }\n\n    // Updating node's dx and dy\n    NodeMatrix[n + NODE_DX] -= xDist * factor;\n    NodeMatrix[n + NODE_DY] -= yDist * factor;\n  }\n\n  // 4) Attraction\n  //---------------\n  coefficient =\n    1 * (options.outboundAttractionDistribution ? outboundAttCompensation : 1);\n\n  // TODO: simplify distance\n  // TODO: coefficient is always used as -c --> optimize?\n  for (e = 0; e < size; e += PPE) {\n    n1 = EdgeMatrix[e + EDGE_SOURCE];\n    n2 = EdgeMatrix[e + EDGE_TARGET];\n    w = EdgeMatrix[e + EDGE_WEIGHT];\n\n    // Edge weight influence\n    ewc = Math.pow(w, options.edgeWeightInfluence);\n\n    // Common measures\n    xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n    yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n    // Applying attraction to nodes\n    if (adjustSizes === true) {\n      distance =\n        Math.sqrt(xDist * xDist + yDist * yDist) -\n        NodeMatrix[n1 + NODE_SIZE] -\n        NodeMatrix[n2 + NODE_SIZE];\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n          }\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- Linear Anti-collision Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc;\n          }\n        }\n      }\n    } else {\n      distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Attraction\n          if (distance > 0)\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Attraction Mass Distributed\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n        } else {\n          //-- Linear Attraction\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = -coefficient * ewc;\n        }\n      }\n    }\n\n    // Updating nodes' dx and dy\n    // TODO: if condition or factor = 1?\n    if (distance > 0) {\n      // Updating nodes' dx and dy\n      NodeMatrix[n1 + NODE_DX] += xDist * factor;\n      NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n      NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n      NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n    }\n  }\n\n  // 5) Apply Forces\n  //-----------------\n  var force, swinging, traction, nodespeed, newX, newY;\n\n  // MATH: sqrt and square distances\n  if (adjustSizes === true) {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        force = Math.sqrt(\n          Math.pow(NodeMatrix[n + NODE_DX], 2) +\n            Math.pow(NodeMatrix[n + NODE_DY], 2)\n        );\n\n        if (force > MAX_FORCE) {\n          NodeMatrix[n + NODE_DX] =\n            (NodeMatrix[n + NODE_DX] * MAX_FORCE) / force;\n          NodeMatrix[n + NODE_DY] =\n            (NodeMatrix[n + NODE_DY] * MAX_FORCE) / force;\n        }\n\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed = (0.1 * Math.log(1 + traction)) / (1 + Math.sqrt(swinging));\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  } else {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed =\n          (NodeMatrix[n + NODE_CONVERGENCE] * Math.log(1 + traction)) /\n          (1 + Math.sqrt(swinging));\n\n        // Updating node convergence\n        NodeMatrix[n + NODE_CONVERGENCE] = Math.min(\n          1,\n          Math.sqrt(\n            (nodespeed *\n              (Math.pow(NodeMatrix[n + NODE_DX], 2) +\n                Math.pow(NodeMatrix[n + NODE_DY], 2))) /\n              (1 + Math.sqrt(swinging))\n          )\n        );\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  }\n\n  // We return the information about the layout (no need to return the matrices)\n  return {};\n};\n"},"lineCount":794}},"error":null,"hash":"6f3028837037881f5ac4f6b62eb20281","cacheData":{"env":{}}}